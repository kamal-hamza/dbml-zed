name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add wasm32-wasip1 target
        run: rustup target add wasm32-wasip1

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build extension
        run: cargo build --release --target wasm32-wasip1

      - name: Verify WASM artifact
        shell: bash
        run: |
          if [ ! -f target/wasm32-wasip1/release/zed_dbml.wasm ]; then
            echo "Error: WASM file not found"
            exit 1
          fi
          ls -lh target/wasm32-wasip1/release/zed_dbml.wasm

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zed-dbml-${{ matrix.os }}
          path: target/wasm32-wasip1/release/zed_dbml.wasm

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run tests
        run: cargo test --all-features

  package:
    name: Create Release Package
    needs: [lint, build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add wasm32-wasip1 target
        run: rustup target add wasm32-wasip1

      - name: Build extension
        run: cargo build --release --target wasm32-wasip1

      - name: Create extension directory
        run: |
          mkdir -p extension/languages/dbml
          cp target/wasm32-wasip1/release/zed_dbml.wasm extension/extension.wasm
          cp extension.toml extension/
          cp -r languages/dbml/* extension/languages/dbml/

      - name: Create package
        run: |
          cd extension
          zip -r ../zed-dbml-extension.zip .
          cd ..

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: zed-dbml-extension
          path: zed-dbml-extension.zip
